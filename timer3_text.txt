import React, { useState, useEffect } from 'react';
import { View, Text, Button, TextInput } from 'react-native';

const App = () => {
  const [stopwatches, setStopwatches] = useState([]);
  const [stopwatchName, setStopwatchName] = useState('');

  const addStopwatch = () => {
    setStopwatches([
      ...stopwatches,
      {
        name: stopwatchName,
        isRunning: false,
        timeElapsed: 0
      }
    ]);
    setStopwatchName('');
  };

  const startStopwatch = index => {
    let updatedStopwatches = [...stopwatches];
    updatedStopwatches.forEach(stopwatch => {
      stopwatch.isRunning = false;
    });
    updatedStopwatches[index].isRunning = true;
    setStopwatches(updatedStopwatches);
  };

  const stopStopwatch = index => {
    let updatedStopwatches = [...stopwatches];
    updatedStopwatches[index].isRunning = false;
    setStopwatches(updatedStopwatches);
  };

  useEffect(() => {
    const intervalId = setInterval(() => {
      let updatedStopwatches = [...stopwatches];
      updatedStopwatches.forEach(stopwatch => {
        if (stopwatch.isRunning) {
          stopwatch.timeElapsed = stopwatch.timeElapsed + 1;
        }
      });
      setStopwatches(updatedStopwatches);
    }, 1000);
    return () => clearInterval(intervalId);
  }, [stopwatches]);

  const formatTime = timeInSeconds => {
    let hours = Math.floor(timeInSeconds / 3600);
    let minutes = Math.floor((timeInSeconds % 3600) / 60);
    let seconds = timeInSeconds % 60;
    return `${hours}:${minutes < 10 ? '0' + minutes : minutes}:${
      seconds < 10 ? '0' + seconds : seconds
    }`;
  };

  return (
    <View style={{ padding: 20 }}>
      <TextInput
        placeholder="Enter stopwatch name"
        value={stopwatchName}
        onChangeText={text => setStopwatchName(text)}
      />
      <Button title="Create Stopwatch" onPress={addStopwatch} />
      {stopwatches.map((stopwatch, index) => (
        <View key={index} style={{ marginTop: 20 }}>
          <Text>{stopwatch.name}</Text>
          <Text>{formatTime(stopwatch.timeElapsed)}</Text>
          {stopwatch.isRunning ? (
            <Button title="Stop" onPress={() => stopStopwatch(index)} />
          ) : (
            <Button title="Start" onPress={() => startStopwatch(index)} />
          )}
        </View>
      ))}
    </View>
  ); 
};

export default App;
t